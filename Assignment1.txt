SET 0
src1:
DB 0x4 DB 0x6 DB 0x3 DB 0x78 DB 0x47 ; my array of 11 elements for src1  
DB 0x49 DB 0x1 DB 0x89 DB 0x23 DB 0x12
DB 0x0
SET 1
src2:
DB 0x5 DB 0x3 DB 0x72 DB 0x18 DB 0x74; my array of 11 elements for src2  
DB 0x95 DB 0x2 DB 0x67 DB 0x33 DB 0x40
DB 0x01
SET 2
dest: DB [0,11] ; Creating a destination for  storing largest values from my arrays' src1 and src2

start: ; starting the program 
    MOV AX, 0 ; laoding address of my array src1 
    MOV DS, AX ; for ds register setting the src1
    MOV AX, 1 ; laoding address of my array src2
    MOV ES, AX ; for ds register setting the src2
    MOV AX, 2 ; dest address 
    MOV SS, AX ; ss is the destination 
    MOV SI, 0  ; starting from 0 
    MOV CX, 11 ; array of 11 elements which we will compare 

_lp: ; starting the loop for loading the arrays 
    MOV AL, byte DS[DI] ; from ds register getting the src1's array
    MOV BL, byte ES[DI]; from ds register getting the src2's array
    CMP AL, BL ; comparing each of the elements from array 
    JG result           ; Jump to 'result' label if the condition for 'greater' (signed) is true
    MOV DL, BL          ; Move the value of BL register into DL register
    MOV byte SS[DI], DL ; Store the value in DL into the memory segment SS at the offset DI
    JMP next            ; Unconditionally jump to 'next' label to continue execution

result:
    MOV DL, AL          ; Move the value of AL register into DL register
    MOV byte SS[DI], DL ; Store the value in DL into the memory segment SS at the offset DI

next:
    INC DI              ; Increment the DI register to point to the next memory location
    LOOP _lp            ; Decrement CX and loop to '_lp' if CX is not zero
